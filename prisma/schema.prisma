generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  email     String       @unique
  firstName String
  lastName  String
  role      Role         @default(CLIENT)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
  avatar    AvatarImage?
  companies Company[]    @relation("CompanyToUser")

  @@map("users")
}

model AvatarImage {
  id        String   @id @default(uuid())
  url       String
  name      String
  updatedAt DateTime @default(now()) @updatedAt
  createdAt DateTime @default(now())
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])

  @@map("avatar_images")
}

model Company {
  id             String          @id @default(uuid())
  name           String
  description    String
  category       CompanyCategory @default(FOOD)
  landingLayout  Json
  landingContent Json
  slug           String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now()) @updatedAt
  citySlug       String          @unique
  images         CompanyImage[]
  products       Product[]
  owners         User[]          @relation("CompanyToUser")

  @@map("companies")
}

model CompanyImage {
  id        String   @id @default(uuid())
  url       String
  name      String
  updatedAt DateTime @default(now()) @updatedAt
  createdAt DateTime @default(now())
  companyId String?
  company   Company? @relation(fields: [companyId], references: [id])

  @@map("company_images")
}

model Product {
  id           String          @id @default(uuid())
  name         String
  description  String
  price        Float
  sku          String?
  category     ProductCategory @default(FOOD)
  isBestSeller Boolean
  stock        Int?
  companyId    String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @default(now()) @updatedAt
  images       ProductImage[]
  company      Company?        @relation(fields: [companyId], references: [id])

  @@map("products")
}

model ProductImage {
  id        String   @id @default(uuid())
  url       String
  name      String
  updatedAt DateTime @default(now()) @updatedAt
  createdAt DateTime @default(now())
  productId String?
  product   Product? @relation(fields: [productId], references: [id])

  @@map("product_images")
}

enum Role {
  CLIENT
  OWNER
  ROOT
}

enum ProductCategory {
  FOOD    @map("FOOD")
  SERVICE @map("SERVICE")
}

enum CompanyCategory {
  FOOD    @map("FOOD")
  SERVICE @map("SERVICE")
}
